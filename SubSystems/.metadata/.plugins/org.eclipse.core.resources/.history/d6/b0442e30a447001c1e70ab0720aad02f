#include "DS18B20_port.h"


uint8_t DS18_USER_GPIO_HIZ_IN(){



	DS18_DQ_GPIO_Port->MODER &= ~(1<<((DS18_DQ_Pin-1)*2 + 1));
	DS18_DQ_GPIO_Port->MODER &= ~(1<<((DS18_DQ_Pin-1)*2));

	DS18_DQ_GPIO_Port->OTYPER |= (1 << (DS18_DQ_Pin-1));

	DS18_DQ_GPIO_Port->OSPEEDR &= ~(1<<((DS18_DQ_Pin-1)*2 + 1));
	DS18_DQ_GPIO_Port->OSPEEDR |=  (1<<((DS18_DQ_Pin-1)*2));

	DS18_DQ_GPIO_Port->PUPDR &= ~(1<<((DS18_DQ_Pin-1)*2 + 1));
	DS18_DQ_GPIO_Port->PUPDR |=  (1<<((DS18_DQ_Pin-1)*2));

	DS18_DQ_GPIO_Port->BSRR =  (1<<((DS18_DQ_Pin-1)));

	return (DS18_DQ_GPIO_Port->IDR & (1<<(DS18_DQ_Pin-1))) ? 1 : 0;
}
void DS18_USER_GPIO_ToGround(){
	DS18_DQ_GPIO_Port->MODER &= ~(1<<((DS18_DQ_Pin-1)*2 + 1));
	DS18_DQ_GPIO_Port->MODER |= (1<<((DS18_DQ_Pin-1)*2 ));

	DS18_DQ_GPIO_Port->OTYPER |= (1 << (DS18_DQ_Pin-1));

	DS18_DQ_GPIO_Port->OSPEEDR &= ~(1<<((DS18_DQ_Pin-1)*2 + 1));
	DS18_DQ_GPIO_Port->OSPEEDR |=  (1<<((DS18_DQ_Pin-1)*2));

	DS18_DQ_GPIO_Port->PUPDR &= ~(1<<((DS18_DQ_Pin-1)*2 + 1));
	DS18_DQ_GPIO_Port->PUPDR |=  (1<<((DS18_DQ_Pin-1)*2));

	DS18_DQ_GPIO_Port->BSRR  =  (1<<((DS18_DQ_Pin-1))) << 16;

}
void DS18B20_USER_DelayMicroSec(volatile uint32_t micros)
{

	micros = micros * (SystemCoreClock / 1000000UL)/8;

/* Wait till done */

while (micros--)
	asm("NOP");
}
